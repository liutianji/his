<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.his.mapper.DrugEntityMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.his.jpa.pojo.DrugEntity">
    <id column="DRUG_CODE" jdbcType="CHAR" property="drugCode" />
    <result column="TRADE_NAME" jdbcType="CHAR" property="tradeName" />
    <result column="BATCH_NO" jdbcType="CHAR" property="batchNo" />
    <result column="SPECS" jdbcType="CHAR" property="specs" />
    <result column="PACK_UNIT" jdbcType="CHAR" property="packUnit" />
    <result column="PACK_QTY" jdbcType="INTEGER" property="packQty" />
    <result column="UNIT_PRICE" jdbcType="DOUBLE" property="unitPrice" />
    <result column="PUT_ON_QTY" jdbcType="INTEGER" property="putOnQty" />
    <result column="PUT_OFF_QTY" jdbcType="INTEGER" property="putOffQty" />
    <result column="SALE_QTY" jdbcType="INTEGER" property="saleQty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    DRUG_CODE, TRADE_NAME, BATCH_NO, SPECS, PACK_UNIT, PACK_QTY, UNIT_PRICE, PUT_ON_QTY, 
    PUT_OFF_QTY, SALE_QTY
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.his.jpa.pojo.DrugEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drug
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from drug
    where DRUG_CODE = #{drugCode,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from drug
    where DRUG_CODE = #{drugCode,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.his.jpa.pojo.DrugEntityExample">
    delete from drug
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.his.jpa.pojo.DrugEntity">
    insert into drug (DRUG_CODE, TRADE_NAME, BATCH_NO, 
      SPECS, PACK_UNIT, PACK_QTY, 
      UNIT_PRICE, PUT_ON_QTY, PUT_OFF_QTY, 
      SALE_QTY)
    values (#{drugCode,jdbcType=CHAR}, #{tradeName,jdbcType=CHAR}, #{batchNo,jdbcType=CHAR}, 
      #{specs,jdbcType=CHAR}, #{packUnit,jdbcType=CHAR}, #{packQty,jdbcType=INTEGER}, 
      #{unitPrice,jdbcType=DOUBLE}, #{putOnQty,jdbcType=INTEGER}, #{putOffQty,jdbcType=INTEGER}, 
      #{saleQty,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.his.jpa.pojo.DrugEntity">
    insert into drug
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="drugCode != null">
        DRUG_CODE,
      </if>
      <if test="tradeName != null">
        TRADE_NAME,
      </if>
      <if test="batchNo != null">
        BATCH_NO,
      </if>
      <if test="specs != null">
        SPECS,
      </if>
      <if test="packUnit != null">
        PACK_UNIT,
      </if>
      <if test="packQty != null">
        PACK_QTY,
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE,
      </if>
      <if test="putOnQty != null">
        PUT_ON_QTY,
      </if>
      <if test="putOffQty != null">
        PUT_OFF_QTY,
      </if>
      <if test="saleQty != null">
        SALE_QTY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="drugCode != null">
        #{drugCode,jdbcType=CHAR},
      </if>
      <if test="tradeName != null">
        #{tradeName,jdbcType=CHAR},
      </if>
      <if test="batchNo != null">
        #{batchNo,jdbcType=CHAR},
      </if>
      <if test="specs != null">
        #{specs,jdbcType=CHAR},
      </if>
      <if test="packUnit != null">
        #{packUnit,jdbcType=CHAR},
      </if>
      <if test="packQty != null">
        #{packQty,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="putOnQty != null">
        #{putOnQty,jdbcType=INTEGER},
      </if>
      <if test="putOffQty != null">
        #{putOffQty,jdbcType=INTEGER},
      </if>
      <if test="saleQty != null">
        #{saleQty,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.his.jpa.pojo.DrugEntityExample" resultType="java.lang.Integer">
    select count(*) from drug
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update drug
    <set>
      <if test="record.drugCode != null">
        DRUG_CODE = #{record.drugCode,jdbcType=CHAR},
      </if>
      <if test="record.tradeName != null">
        TRADE_NAME = #{record.tradeName,jdbcType=CHAR},
      </if>
      <if test="record.batchNo != null">
        BATCH_NO = #{record.batchNo,jdbcType=CHAR},
      </if>
      <if test="record.specs != null">
        SPECS = #{record.specs,jdbcType=CHAR},
      </if>
      <if test="record.packUnit != null">
        PACK_UNIT = #{record.packUnit,jdbcType=CHAR},
      </if>
      <if test="record.packQty != null">
        PACK_QTY = #{record.packQty,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        UNIT_PRICE = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.putOnQty != null">
        PUT_ON_QTY = #{record.putOnQty,jdbcType=INTEGER},
      </if>
      <if test="record.putOffQty != null">
        PUT_OFF_QTY = #{record.putOffQty,jdbcType=INTEGER},
      </if>
      <if test="record.saleQty != null">
        SALE_QTY = #{record.saleQty,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update drug
    set DRUG_CODE = #{record.drugCode,jdbcType=CHAR},
      TRADE_NAME = #{record.tradeName,jdbcType=CHAR},
      BATCH_NO = #{record.batchNo,jdbcType=CHAR},
      SPECS = #{record.specs,jdbcType=CHAR},
      PACK_UNIT = #{record.packUnit,jdbcType=CHAR},
      PACK_QTY = #{record.packQty,jdbcType=INTEGER},
      UNIT_PRICE = #{record.unitPrice,jdbcType=DOUBLE},
      PUT_ON_QTY = #{record.putOnQty,jdbcType=INTEGER},
      PUT_OFF_QTY = #{record.putOffQty,jdbcType=INTEGER},
      SALE_QTY = #{record.saleQty,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.his.jpa.pojo.DrugEntity">
    update drug
    <set>
      <if test="tradeName != null">
        TRADE_NAME = #{tradeName,jdbcType=CHAR},
      </if>
      <if test="batchNo != null">
        BATCH_NO = #{batchNo,jdbcType=CHAR},
      </if>
      <if test="specs != null">
        SPECS = #{specs,jdbcType=CHAR},
      </if>
      <if test="packUnit != null">
        PACK_UNIT = #{packUnit,jdbcType=CHAR},
      </if>
      <if test="packQty != null">
        PACK_QTY = #{packQty,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="putOnQty != null">
        PUT_ON_QTY = #{putOnQty,jdbcType=INTEGER},
      </if>
      <if test="putOffQty != null">
        PUT_OFF_QTY = #{putOffQty,jdbcType=INTEGER},
      </if>
      <if test="saleQty != null">
        SALE_QTY = #{saleQty,jdbcType=INTEGER},
      </if>
    </set>
    where DRUG_CODE = #{drugCode,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.his.jpa.pojo.DrugEntity">
    update drug
    set TRADE_NAME = #{tradeName,jdbcType=CHAR},
      BATCH_NO = #{batchNo,jdbcType=CHAR},
      SPECS = #{specs,jdbcType=CHAR},
      PACK_UNIT = #{packUnit,jdbcType=CHAR},
      PACK_QTY = #{packQty,jdbcType=INTEGER},
      UNIT_PRICE = #{unitPrice,jdbcType=DOUBLE},
      PUT_ON_QTY = #{putOnQty,jdbcType=INTEGER},
      PUT_OFF_QTY = #{putOffQty,jdbcType=INTEGER},
      SALE_QTY = #{saleQty,jdbcType=INTEGER}
    where DRUG_CODE = #{drugCode,jdbcType=CHAR}
  </update>
</mapper>